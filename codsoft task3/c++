#include <iostream>
#include <vector>

using namespace std;

// Function to draw the game board
void drawBoard(const vector<char>& board) {
    cout << " " << board[0] << " | " << board[1] << " | " << board[2] << endl;
    cout << "-----------" << endl;
    cout << " " << board[3] << " | " << board[4] << " | " << board[5] << endl;
    cout << "-----------" << endl;
    cout << " " << board[6] << " | " << board[7] << " | " << board[8] << endl;
}

// Function to handle player move
void playerMove(vector<char>& board, char player) {
    int move;
    cout << "Player " << player << ", enter your move (1-9): ";
    cin >> move;
    if (board[move - 1] != ' ') {
        cout << "Invalid move, try again." << endl;
        playerMove(board, player);
    } else {
        board[move - 1] = player;
    }
}

// Function to check for win
bool checkWin(const vector<char>& board, char player) {
    // Check rows
    for (int i = 0; i < 3; i++) {
        if (board[i * 3] == player && board[i * 3 + 1] == player && board[i * 3 + 2] == player) {
            return true;
        }
    }
    // Check columns
    for (int i = 0; i < 3; i++) {
        if (board[i] == player && board[i + 3] == player && board[i + 6] == player) {
            return true;
        }
    }
    // Check diagonals
    if ((board[0] == player && board[4] == player && board[8] == player) ||
        (board[2] == player && board[4] == player && board[6] == player)) {
        return true;
    }
    return false;
}

// Function to check for draw
bool checkDraw(const vector<char>& board) {
    for (int i = 0; i < 9; i++) {
        if (board[i] == ' ') {
            return false;
        }
    }
    return true;
}

int main() {
    vector<char> board(9, ' ');
    char currentPlayer = 'X';
    bool playAgain = true;

    while (playAgain) {
        // Initialize the board
        for (int i = 0; i < 9; i++) {
            board[i] = ' ';
        }

        while (true) {
            // Draw the board
            drawBoard(board);

            // Player move
            playerMove(board, currentPlayer);

            // Check for win
            if (checkWin(board, currentPlayer)) {
                drawBoard(board);
                cout << "Player " << currentPlayer << " wins!" << endl;
                break;
            }

            // Check for draw
            if (checkDraw(board)) {
                drawBoard(board);
                cout << "It's a draw!" << endl;
                break;
            }

            // Switch players
            currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
        }

        // Ask to play again
        cout << "Do you want to play again? (y/n): ";
        char response;
        cin >> response;
        playAgain = (response == 'y');
    }

    return 0;
}